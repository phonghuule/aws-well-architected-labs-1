AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys a role to management account so we can assume to read data using a lambda 
Parameters:
  CostAccountID:
    Type: String
    Description: AccountId of where the collector is deployed
  ManagementAccountRole:
    Type: String
    Description: Name of role deployed into Management account to read high level data
    Default: "Lambda-Assume-Role-Management-Account" 
  RolePrefix:
    Type: String
    Description: This prefix will be placed in front of all roles created. Note you may wish to add a dash at the end to make more readable e.g. prefix-
    Default: "WA-"
Outputs:
  LambdaRole:
    Description: Role for lambda to assume in cost account 
    Value:
      Fn::GetAtt:
        - LambdaRole
        - Arn 
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${RolePrefix}${ManagementAccountRole}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                -  !Sub "arn:aws:iam::${CostAccountID}:root"
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
      Path: /
      Policies:
        - PolicyName: "Management-Account-permissions"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ce:GetRightsizingRecommendation"
                  - "organizations:ListAccounts"
                  - "organizations:ListCreateAccountStatus"
                  - "organizations:DescribeOrganization"
                  - "organizations:ListTagsForResource"
                  - "organizations:ListRoots"
                  - "organizations:ListChildren"
                  - "organizations:ListAccountsForParent"
                  - "organizations:DescribeOrganizationalUnit"
                  - "organizations:DescribeAccount"
                  - "organizations:ListParents"
                  - "organizations:ListOrganizationalUnitsForParent"
                  - "organizations:ListChildren"
                Resource: "*"
        - PolicyName: "ComputeOptimizer-ExportLambdaFunctionRecommendations"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "compute-optimizer:ExportLambdaFunctionRecommendations"
                  - "compute-optimizer:GetLambdaFunctionRecommendations"
                  - "lambda:ListFunctions"
                  - "lambda:ListProvisionedConcurrencyConfigs"
                Resource: "*"
        - PolicyName: "ComputeOptimizer-ExportAutoScalingGroupRecommendations"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "compute-optimizer:ExportAutoScalingGroupRecommendations"
                  - "compute-optimizer:GetAutoScalingGroupRecommendations"
                  - "autoscaling:DescribeAutoScalingGroups"
                Resource: "*"
        - PolicyName: "ComputeOptimizer-ExportEBSVolumeRecommendations"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "compute-optimizer:ExportEBSVolumeRecommendations"
                  - "compute-optimizer:GetEBSVolumeRecommendations"
                  - "EC2:DescribeVolumes"
                Resource: "*"
        - PolicyName: "ComputeOptimizer-ExportEC2InstanceRecommendations"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "compute-optimizer:ExportEC2InstanceRecommendations"
                  - "compute-optimizer:GetEC2InstanceRecommendations"
                  - "EC2:DescribeInstances"
                Resource: "*"